Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.feature_selection import mutual_info_classif
mutual_info = mutual_info_classif(X_train, y_train)
mutual_info
------------------

[0;31m[0m
[0;31mValueError[0mTraceback (most recent call last)
[0;32m<ipython-input-28-0ab21a944ea7>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mfrom[0m [0msklearn[0m[0;34m.[0m[0mfeature_selection[0m [0;32mimport[0m [0mmutual_info_classif[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0mmutual_info[0m [0;34m=[0m [0mmutual_info_classif[0m[0;34m([0m[0mX_train[0m[0;34m,[0m [0my_train[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0mmutual_info[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_mutual_info.py[0m in [0;36mmutual_info_classif[0;34m(X, y, discrete_features, n_neighbors, copy, random_state)[0m
[1;32m    462[0m     """
[1;32m    463[0m     [0mcheck_classification_targets[0m[0;34m([0m[0my[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 464[0;31m     [0;32mreturn[0m [0m_estimate_mi[0m[0;34m([0m[0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0mdiscrete_features[0m[0;34m,[0m [0;32mTrue[0m[0;34m,[0m [0mn_neighbors[0m[0;34m,[0m [0mcopy[0m[0;34m,[0m [0mrandom_state[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_mutual_info.py[0m in [0;36m_estimate_mi[0;34m(X, y, discrete_features, discrete_target, n_neighbors, copy, random_state)[0m
[1;32m    254[0m            [0mData[0m [0mSets[0m[0;31m"[0m[0;34m.[0m [0mPLoS[0m [0mONE[0m [0;36m9[0m[0;34m([0m[0;36m2[0m[0;34m)[0m[0;34m,[0m [0;36m2014.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    255[0m     """
[0;32m--> 256[0;31m     [0mX[0m[0;34m,[0m [0my[0m [0;34m=[0m [0mcheck_X_y[0m[0;34m([0m[0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0maccept_sparse[0m[0;34m=[0m[0;34m"csc"[0m[0;34m,[0m [0my_numeric[0m[0;34m=[0m[0;32mnot[0m [0mdiscrete_target[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    257[0m     [0mn_samples[0m[0;34m,[0m [0mn_features[0m [0;34m=[0m [0mX[0m[0;34m.[0m[0mshape[0m[0;34m[0m[0;34m[0m[0m
[1;32m    258[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36mcheck_X_y[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)[0m
[1;32m    974[0m         [0mensure_min_samples[0m[0;34m=[0m[0mensure_min_samples[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    975[0m         [0mensure_min_features[0m[0;34m=[0m[0mensure_min_features[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 976[0;31m         [0mestimator[0m[0;34m=[0m[0mestimator[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    977[0m     )
[1;32m    978[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)[0m
[1;32m    798[0m [0;34m[0m[0m
[1;32m    799[0m         [0;32mif[0m [0mforce_all_finite[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 800[0;31m             [0m_assert_all_finite[0m[0;34m([0m[0marray[0m[0;34m,[0m [0mallow_nan[0m[0;34m=[0m[0mforce_all_finite[0m [0;34m==[0m [0;34m"allow-nan"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    801[0m [0;34m[0m[0m
[1;32m    802[0m     [0;32mif[0m [0mensure_min_samples[0m [0;34m>[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36m_assert_all_finite[0;34m(X, allow_nan, msg_dtype)[0m
[1;32m    114[0m             raise ValueError(
[1;32m    115[0m                 msg_err.format(
[0;32m--> 116[0;31m                     [0mtype_err[0m[0;34m,[0m [0mmsg_dtype[0m [0;32mif[0m [0mmsg_dtype[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m [0;32melse[0m [0mX[0m[0;34m.[0m[0mdtype[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m                 )
[1;32m    118[0m             )

[0;31mValueError[0m: Input contains NaN, infinity or a value too large for dtype('float64').
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

